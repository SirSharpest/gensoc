library(readr)
X6th <- read_csv("~/6th.csv")
View(X6th)
plot(X6th)
plot(X6th["1"])
plot(X6th["0"])
hist(X6th["0"])
X6
X6t
library(readr)
balance_data_thayna <- read_csv("~/balance_data-thayna.csv")
View(balance_data_thayna)
balance_data_thayna
plot(balance_data_thayna)
install.packages('qtl')
export R_LIBS="/home/nathan/R_libs"
mkdir /home/nathan/R_libs
export R_LIBS="/home/nathan/R_libs"
mkdir /home/nathan/R_libs;
!ls
pwd
pwd()
system('pwd')
x <- system('pwd')
x
x -> system('pwd')
x = system('pwd')
x
x = c(system('pwd'))
x
# Set working directory
setwd('~/Documents/GenSoc/Data/Genetic Map/')
# Read in Rqtl package
library(qtl)
# load plotting packages
library(ggplot2)
library(ggrepel)
library(tidyr)
library(dplyr)
#load in qtl plotter functions
source('~/Documents/GenSoc/QTL Mapping/Code/qtlplotter.R')
# Read in:
#	(1) Genetic Map
#	(2) Marker Position Information
#	(3) Phenotypic Data
#	(4) Chromosome ID
#	(5) Marker Names
#	(6) Phenotype Names
HM = read.cross(format="qtlcart", file="qtlcart.cro", mapfile="qtlcart.map")
# Calculate genotypic probabilities
HM = calc.genoprob(HM, map.function="kosambi")
# Plot Cross Information
#png(file="figure_2_histograms.png", width=2000, height=2000)
plot(HM)
out.em <- scanone(HM, model = "normal")
qtl_plot(input=out.em)
qtl_plot(input = rbind(data.frame(out.em, method = "EM algorithm"),
data.frame(out.hk, method = "Haley-Knott regression"),
data.frame(out.imp, method = "Multiple imputation")),
chrs = c(1, 4),
lod = lod_threshold[1],
rug = TRUE,
labels = labels_df)
out.em <- scanone(HM, model = "normal")
out.hk <- scanone(HM, method = "hk", model = "normal")
out.imp <- scanone(HM, method = "imp", model = "normal")
qtl_plot(input = rbind(data.frame(out.em, method = "EM algorithm"),
data.frame(out.hk, method = "Haley-Knott regression"),
data.frame(out.imp, method = "Multiple imputation")),
chrs = c(1, 4),
lod = lod_threshold[1],
rug = TRUE,
labels = labels_df)
out.em <- scanone(HM, model = "normal")
out.hk <- scanone(HM, method = "hk", model = "normal")
out.imp <- scanone(HM, method = "imp", model = "normal")
labels_df <- as.data.frame(summary(out.hk, perms = operm.hk, alpha = 0.05, pvalues = TRUE))
out.em <- scanone(HM, model = "normal")
out.hk <- scanone(HM, method = "hk", model = "normal")
out.imp <- scanone(HM, method = "imp", model = "normal")
operm.hk <- scanone(HM, pheno.col = 1, model = "normal", method = "hk", n.perm = 1000, verbose = FALSE)
labels_df <- as.data.frame(summary(out.hk, perms = operm.hk, alpha = 0.05, pvalues = TRUE))
qtl_plot(input = rbind(data.frame(out.em, method = "EM algorithm"),
data.frame(out.hk, method = "Haley-Knott regression"),
data.frame(out.imp, method = "Multiple imputation")),
chrs = c(1, 4),
lod = lod_threshold[1],
rug = TRUE,
labels = labels_df)
hyper <- HM
hyper <- est.rf(hyper)
hyper <- calc.genoprob(hyper, step = 1, error.prob = 0.01)
out.em <- scanone(hyper, model = "normal")
out.hk <- scanone(hyper, method = "hk", model = "normal")
hyper <- sim.geno(hyper, step = 2, n.draws = 16, error.prob = 0.01)
out.imp <- scanone(hyper, method = "imp", model = "normal")
operm.hk <- scanone(hyper, pheno.col = 1, model = "normal", method = "hk", n.perm = 1000, verbose = FALSE)
lod_threshold <- summary(operm.hk, alpha = 0.05)
labels_df <- as.data.frame(summary(out.hk, perms = operm.hk, alpha = 0.05, pvalues = TRUE))
hyper <- HM
hyper <- est.rf(hyper)
hyper <- calc.genoprob(hyper, step = 1, error.prob = 0.01)
out.em <- scanone(hyper, model = "normal")
out.hk <- scanone(hyper, method = "hk", model = "normal")
hyper <- sim.geno(hyper, step = 2, n.draws = 16, error.prob = 0.01)
out.imp <- scanone(hyper, method = "imp", model = "normal")
operm.hk <- scanone(hyper, pheno.col = 1, model = "normal", method = "hk", n.perm = 1000, verbose = FALSE)
lod_threshold <- summary(operm.hk, alpha = 0.05)
labels_df <- as.data.frame(summary(out.hk, perms = operm.hk, alpha = 0.05, pvalues = TRUE))
qtl_plot(input = rbind(data.frame(out.em, method = "EM algorithm"),
data.frame(out.hk, method = "Haley-Knott regression"),
data.frame(out.imp, method = "Multiple imputation")),
chrs = c(1, 4),
lod = lod_threshold[1],
rug = TRUE,
labels = labels_df)
View(labels_df)
hyper <- HM
hyper <- est.rf(hyper)
hyper <- calc.genoprob(hyper, step = 1, error.prob = 0.01)
out.em <- scanone(hyper, model = "normal")
out.hk <- scanone(hyper, method = "hk", model = "normal")
hyper <- sim.geno(hyper, step = 2, n.draws = 16, error.prob = 0.01)
out.imp <- scanone(hyper, method = "imp", model = "normal")
operm.hk <- scanone(hyper, pheno.col = 1, model = "normal", method = "hk", n.perm = 1000, verbose = FALSE)
lod_threshold <- summary(operm.hk, alpha = 0.05)
labels_df <- as.data.frame(summary(out.hk, perms = operm.hk, alpha = 0.05, pvalues = TRUE))
qtl_plot(input = rbind(data.frame(out.em, method = "EM algorithm"),
data.frame(out.hk, method = "Haley-Knott regression"),
data.frame(out.imp, method = "Multiple imputation")),
chrs = c(1, 4),
lod = lod_threshold[1],
rug = TRUE)
qtl_plot(input = rbind(data.frame(out.em, method = "EM algorithm"),
data.frame(out.hk, method = "Haley-Knott regression"),
data.frame(out.imp, method = "Multiple imputation")))
plot.rf(HM)
plot.map(HM)
geno.image(HM, chr=1, reorder=FALSE)
geno.image(HM, chr=Bd1, reorder=FALSE)
geno.image(HM, chr=length, reorder=FALSE)
geno.image(HM, chr=width, reorder=FALSE)
meanScan
install_github("jtlovell/qtltools")
library(devtools)
install_github("jtlovell/qtltools")
library(qtlTools)
meanScan
meanScan(HM, pheno.col='length')
meanScan(HM, pheno.col='width')
meanScan(HM, pheno.col='circularity')
meanScan(HM, pheno.col='depth')
