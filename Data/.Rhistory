install.packages(c('rqtl', 'tidyverse'))
install.packages(c('xml2', 'rvest', 'httr'))
install.packages(c('xml2'))
install.packages(c(rvest', 'httr'))
install.packages(c('rvest', 'httr'))
knitr::opts_chunk$set(echo = TRUE)
# load libraries
library(stats)
library(plyr)
library(dplyr)
library(purrr)
library(readr)
library(ggplot2)
library(scales)
library(plotrix)
library(qtl)
library(knitr)
library(xtable)
library(GGally)
library(reshape2)
library(png)
# example of grain phenotypes
img <- readPNG('~/Google Drive/GenSoc/Pretty Pictures/labwheat.png')
# load data
phendata = read_tsv('~/Google Drive/GenSoc/Data/Phenotypic Data/Compiled Data/medianRILs.tsv')
colnames(phendata) <- substring(colnames(phendata), 8)
phendata$z <- NULL
abr6 = read_tsv('~/Google Drive/GenSoc/Data/Phenotypic Data/Compiled Data/abr6.tsv')
bd21 = read_tsv('~/Google Drive/GenSoc/Data/Phenotypic Data/Compiled Data/bd21.tsv')
# load qtl plotting functions
source('~/Google Drive/GenSoc/QTL Mapping/Code/qtlplotter.R')
# load QTL
qtl = read.cross(format="qtlcart",
file="~/Google Drive/GenSoc/Data/Genetic Map/Latest ABR6xBD21 Map/qtlcart.cro",
mapfile="~/Google Drive/GenSoc/Data/Genetic Map/Latest ABR6xBD21 Map/qtlcart.map")
qtl <- calc.genoprob(qtl, error.prob = 0.001)
for (col in colnames(qtl$pheno)){
s1 <- scanone(qtl, method="hk", pheno.col = col)
s2 <- scanone(qtl, method="em", pheno.col = col)
s3 <- scanone(qtl, method="mr", pheno.col = col)
perms <- scanone(qtl, pheno.col = col, n.perm = 1000, method = "hk")
summary(s1, perms=perms, pvalues=T)
if (max(s1$lod) > 3){
kable(summary(s1))
par( mfrow=(c(2,1)))
plot(s1,s2,s3, main=" ", col=c('green','blue','orange'), ity=2)
title(sprintf("One-way scan QTL for: %s", col), outer=TRUE, line=-1)
add.threshold(out=s1, perms = perms, col='red', ity=2, alpha=0.2)
plot(perms)
abline(v=quantile(perms,.95), col='red', ity=2)
cat('\newpage')
}
}
ggcorr(bd21[, c('length','width','depth','circularity', 'volume','crease_depth',
'surface_area', 'geometry_ratio')],
hjust = 0.6, label = TRUE, label_size = 2, size = 2 ) +
annotate("Text", x = 3.5, y = 7, label = "Correlation of Median phenotypes\n of BD21")
ggcorr(bd21[, c('length','width','depth','circularity', 'volume','crease_depth',
'surface_area', 'geometry_ratio')],
hjust = 0.6, label = TRUE, label_size = 2, size = 2 ) +
annotate("Text", x = 3.5, y = 7, label = "Correlation of Median phenotypes\n of BD21")
ggcorr(bd21[, c('length','width','depth','circularity', 'volume','crease_depth',
'surface_area', 'geometry_ratio')],
hjust = 0.6, label = TRUE, label_size = 2, size = 2 ) +
annotate("Text", x = 3.5, y = 7, label = "Correlation of Median phenotypes\n of BD21")
ggcorr(bd21[, c('length','width','depth','circularity', 'volume','crease_depth',
'surface_area', 'geometry_ratio')],
hjust = 0.6, label = TRUE, label_size = 2, size = 2 ) +
annotate("Text", x = 3.5, y = 7, label = "Correlation of Median phenotypes\n of BD21")
ggcorr(bd21[, c('length','width','depth','circularity', 'volume','crease_depth',
'surface_area', 'geometry_ratio')],
hjust = 0.6, label = TRUE, label_size = 4, size = 4 ) +
annotate("Text", x = 3.5, y = 7, label = "Correlation of Median phenotypes\n of BD21")
pairs(~length+width+depth ,data=phendata)
ggpairs(~length+width+depth ,data=phendata)
ggpairs(length+width+depth ,data=phendata)
ggpairs(length,width,depth ,data=phendata)
ggpairs(phendata)
ggpairs(phendata[,1:10])
ggpairs(phendata[,1:3])
ggpairs(phendata[,2:3])
ggpairs(phendata[,2:18])
ggpairs(phendata[,2:16])
colnames(phendata)
ggpairs(phendata[,2:9])
source('/home/nathan/Google Drive/GenSoc/QTL Mapping/Code/qtlplotter.R')
qtl_plot(qtl)
# load libraries
library(stats)
library(plyr)
library(dplyr)
library(purrr)
library(readr)
library(ggplot2)
library(scales)
library(plotrix)
library(qtl)
library(knitr)
library(xtable)
library(GGally)
library(reshape2)
library(png)
# example of grain phenotypes
img <- readPNG('~/Google Drive/GenSoc/Pretty Pictures/labwheat.png')
# load data
phendata = read_tsv('~/Google Drive/GenSoc/Data/Phenotypic Data/Compiled Data/medianRILs.tsv')
colnames(phendata) <- substring(colnames(phendata), 8)
phendata$z <- NULL
abr6 = read_tsv('~/Google Drive/GenSoc/Data/Phenotypic Data/Compiled Data/abr6.tsv')
bd21 = read_tsv('~/Google Drive/GenSoc/Data/Phenotypic Data/Compiled Data/bd21.tsv')
# load qtl plotting functions
source('~/Google Drive/GenSoc/QTL Mapping/Code/qtlplotter.R')
# load QTL
qtl = read.cross(format="qtlcart",
file="~/Google Drive/GenSoc/Data/Genetic Map/Latest ABR6xBD21 Map/qtlcart.cro",
mapfile="~/Google Drive/GenSoc/Data/Genetic Map/Latest ABR6xBD21 Map/qtlcart.map")
qtl <- calc.genoprob(qtl, error.prob = 0.001)
qtl_plot(qtl)
for (col in colnames(qtl$pheno)){
s1 <- scanone(qtl, method = "hk", pheno.col = col)
s2 <- scanone(qtl, method = "em", pheno.col = col)
s3 <- scanone(qtl, method = "mr", pheno.col = col)
operm.hk <- scanone(qtl, method = "hk", pheno.col = col, model = "normal",
n.perm = 1000, verbose = FALSE)
lod_threshold <- summary(operm.hk)
perms <- scanone(qtl, pheno.col = col, n.perm = 1000, method = "hk")
summary(s1, perms=perms, pvalues=T)
if (max(s1$lod) > 3){
kable(summary(s1))
par( mfrow=(c(2,1)))
plot(s1,s2,s3, main=" ", col=c('green','blue','orange'), ity=2)
title(sprintf("One-way scan QTL for: %s", col), outer=TRUE, line=-1)
add.threshold(out=s1, perms = perms, col='red', ity=2, alpha=0.2)
plot(perms)
abline(v=quantile(perms,.95), col='red', ity=2)
break
}
}
for (col in colnames(qtl$pheno)){
s1 <- scanone(qtl, method = "hk", pheno.col = col)
s2 <- scanone(qtl, method = "em", pheno.col = col)
s3 <- scanone(qtl, method = "mr", pheno.col = col)
operm.hk <- scanone(qtl, method = "hk", pheno.col = col, model = "normal",
n.perm = 1000, verbose = FALSE)
lod_threshold <- summary(operm.hk)
#perms <- scanone(qtl, pheno.col = col, n.perm = 1000, method = "hk")
summary(s1, perms=perms, pvalues=T)
if (max(s1$lod) > 3){
kable(summary(s1))
par( mfrow=(c(2,1)))
plot(s1,s2,s3, main=" ", col=c('green','blue','orange'), ity=2)
title(sprintf("One-way scan QTL for: %s", col), outer=TRUE, line=-1)
add.threshold(out=s1, perms = perms, col='red', ity=2, alpha=0.2)
plot(perms)
abline(v=quantile(perms,.95), col='red', ity=2)
break
}
}
for (col in colnames(qtl$pheno)){
s1 <- scanone(qtl, method = "hk", pheno.col = col)
s2 <- scanone(qtl, method = "em", pheno.col = col)
s3 <- scanone(qtl, method = "mr", pheno.col = col)
operm.hk <- scanone(qtl, method = "hk", pheno.col = col, model = "normal",
n.perm = 1000, verbose = FALSE)
lod_threshold <- summary(operm.hk)
perms <- scanone(qtl, pheno.col = col, n.perm = 1000, method = "hk")
summary(s1, perms=perms, pvalues=T)
if (max(s1$lod) >= lod_threshold){
kable(summary(s1))
par( mfrow=(c(2,1)))
plot(s1,s2,s3, main=" ", col=c('green','blue','orange'), ity=2)
title(sprintf("One-way scan QTL for: %s", col), outer=TRUE, line=-1)
add.threshold(out=s1, perms = perms, col='red', ity=2, alpha=0.2)
plot(perms)
abline(v=quantile(perms,.95), col='red', ity=2)
break
}
}
for (col in colnames(qtl$pheno)){
s1 <- scanone(qtl, method = "hk", pheno.col = col)
s2 <- scanone(qtl, method = "em", pheno.col = col)
s3 <- scanone(qtl, method = "mr", pheno.col = col)
operm.hk <- scanone(qtl, method = "hk", pheno.col = col, model = "normal",
n.perm = 1000, verbose = FALSE)
lod_threshold <- summary(operm.hk)
perms <- scanone(qtl, pheno.col = col, n.perm = 1000, method = "hk")
summary(s1, perms=perms, pvalues=T)
if (max(s1$lod) >= lod_threshold){
kable(summary(s1))
par( mfrow=(c(2,1)))
plot(s1,s2,s3, main=" ", col=c('green','blue','orange'), ity=2)
title(sprintf("One-way scan QTL for: %s", col), outer=TRUE, line=-1)
add.threshold(out=s1, perms = perms, col='red', ity=2, alpha=0.2)
plot(perms)
abline(v=quantile(perms,.95), col='red', ity=2)
}
}
kable(summary(phendata))
knitr::opts_chunk$set(echo = TRUE)
# load libraries
library(stats)
library(plyr)
library(dplyr)
library(purrr)
library(readr)
library(ggplot2)
library(scales)
library(plotrix)
library(qtl)
library(knitr)
library(xtable)
library(GGally)
library(reshape2)
library(png)
# example of grain phenotypes
img <- readPNG('~/Google Drive/GenSoc/Pretty Pictures/labwheat.png')
# load data
phendata = read_tsv('~/Google Drive/GenSoc/Data/Phenotypic Data/Compiled Data/medianRILs.tsv')
colnames(phendata[,2:10]) <- substring(colnames(phendata), 8)
knitr::opts_chunk$set(echo = TRUE)
# load libraries
library(stats)
library(plyr)
library(dplyr)
library(purrr)
library(readr)
library(ggplot2)
library(scales)
library(plotrix)
library(qtl)
library(knitr)
library(xtable)
library(GGally)
library(reshape2)
library(png)
# example of grain phenotypes
img <- readPNG('~/Google Drive/GenSoc/Pretty Pictures/labwheat.png')
# load data
phendata = read_tsv('~/Google Drive/GenSoc/Data/Phenotypic Data/Compiled Data/medianRILs.tsv')
colnames(phendata[,2:10]) <- substring(colnames(phendata[,2:10]), 8)
phendata$z <- NULL
abr6 = read_tsv('~/Google Drive/GenSoc/Data/Phenotypic Data/Compiled Data/abr6.tsv')
bd21 = read_tsv('~/Google Drive/GenSoc/Data/Phenotypic Data/Compiled Data/bd21.tsv')
# load qtl plotting functions
source('~/Google Drive/GenSoc/QTL Mapping/Code/qtlplotter.R')
# load QTL
qtl = read.cross(format="qtlcart",
file="~/Google Drive/GenSoc/Data/Genetic Map/Latest ABR6xBD21 Map/qtlcart.cro",
mapfile="~/Google Drive/GenSoc/Data/Genetic Map/Latest ABR6xBD21 Map/qtlcart.map")
qtl <- calc.genoprob(qtl, error.prob = 0.001)
kable(summary(phendata))
kable(summary(phendata[,2:10]))
kable(summary(phendata[,2:5]))
kable(summary(phendata[,6:10]))
kable(summary(phendata[,2:6]))
kable(summary(phendata[,7:12]))
phendata = read_tsv('~/Google Drive/GenSoc/Data/Phenotypic Data/Compiled Data/medianRILs.tsv')
colnames(phendata[,2:10]) <- substring(colnames(phendata[,2:10]), 8)
phendata$z <- NULL
View(phendata)
colnames(phendata[2:10]) <- substring(colnames(phendata[2:10]), 8)
View(phendata)
knitr::opts_chunk$set(echo = TRUE)
# load libraries
library(stats)
library(plyr)
library(dplyr)
library(purrr)
library(readr)
library(ggplot2)
library(scales)
library(plotrix)
library(qtl)
library(knitr)
library(xtable)
library(GGally)
library(reshape2)
library(png)
# example of grain phenotypes
img <- readPNG('~/Google Drive/GenSoc/Pretty Pictures/labwheat.png')
# load data
phendata = read_tsv('~/Google Drive/GenSoc/Data/Phenotypic Data/Compiled Data/medianRILs.tsv')
phendata$median_z <- NULL
abr6 = read_tsv('~/Google Drive/GenSoc/Data/Phenotypic Data/Compiled Data/abr6.tsv')
bd21 = read_tsv('~/Google Drive/GenSoc/Data/Phenotypic Data/Compiled Data/bd21.tsv')
# load qtl plotting functions
source('~/Google Drive/GenSoc/QTL Mapping/Code/qtlplotter.R')
# load QTL
qtl = read.cross(format="qtlcart",
file="~/Google Drive/GenSoc/Data/Genetic Map/Latest ABR6xBD21 Map/qtlcart.cro",
mapfile="~/Google Drive/GenSoc/Data/Genetic Map/Latest ABR6xBD21 Map/qtlcart.map")
qtl <- calc.genoprob(qtl, error.prob = 0.001)
kable(summary(phendata[,2:6]))
kable(summary(phendata[,7:11]))
kable((phendata[1:10,2:6]))
kable(summary(phendata[,7:11]))
kable((phendata[1:10,2:6]))
kable((phendata[1:10,7:11]))
kable((phendata[1:10,12:17]))
kable((phendata[1:10,2:6]))
kable((phendata[1:10,7:11]))
kable((phendata[1:10,12:17]))
kable((phendata[1:10,17:19]))
kable((phendata[1:10,2:6]))
kable((phendata[1:10,7:11]))
kable((phendata[1:10,12:17]))
kable((phendata[1:10,17:21]))
kable((phendata[1:10,2:6]))
kable((phendata[1:10,7:11]))
kable((phendata[1:10,12:17]))
kable((phendata[1:10,17:20]))
kable((phendata[1:10,2:6]))
kable((phendata[1:10,7:11]))
kable((phendata[1:10,12:17]))
kable((phendata[1:10,17:19]))
kable((phendata[1:5,2:6]))%>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "float_right")
install.packages("kableExtra")
library(kableExtra)
knitr::opts_chunk$set(echo = TRUE)
# load libraries
library(stats)
library(plyr)
library(dplyr)
library(purrr)
library(readr)
library(ggplot2)
library(scales)
library(plotrix)
library(qtl)
library(knitr)
library(xtable)
library(GGally)
library(reshape2)
library(png)
library(kableExtra)
# example of grain phenotypes
img <- readPNG('~/Google Drive/GenSoc/Pretty Pictures/labwheat.png')
# load data
phendata = read_tsv('~/Google Drive/GenSoc/Data/Phenotypic Data/Compiled Data/medianRILs.tsv')
phendata$median_z <- NULL
abr6 = read_tsv('~/Google Drive/GenSoc/Data/Phenotypic Data/Compiled Data/abr6.tsv')
bd21 = read_tsv('~/Google Drive/GenSoc/Data/Phenotypic Data/Compiled Data/bd21.tsv')
# load qtl plotting functions
source('~/Google Drive/GenSoc/QTL Mapping/Code/qtlplotter.R')
# load QTL
qtl = read.cross(format="qtlcart",
file="~/Google Drive/GenSoc/Data/Genetic Map/Latest ABR6xBD21 Map/qtlcart.cro",
mapfile="~/Google Drive/GenSoc/Data/Genetic Map/Latest ABR6xBD21 Map/qtlcart.map")
qtl <- calc.genoprob(qtl, error.prob = 0.001)
kable((phendata[1:5,2:6]))%>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "float_right")
kable((phendata[1:5,7:11]))
kable((phendata[1:5,12:17]))
kable((phendata[1:5,17:19]))
knitr::opts_chunk$set(echo = TRUE)
options(knitr.table.format = "html")
# load libraries
library(stats)
library(plyr)
library(dplyr)
library(purrr)
library(readr)
library(ggplot2)
library(scales)
library(plotrix)
library(qtl)
library(knitr)
library(xtable)
library(GGally)
library(reshape2)
library(png)
library(kableExtra)
# example of grain phenotypes
img <- readPNG('~/Google Drive/GenSoc/Pretty Pictures/labwheat.png')
# load data
phendata = read_tsv('~/Google Drive/GenSoc/Data/Phenotypic Data/Compiled Data/medianRILs.tsv')
phendata$median_z <- NULL
abr6 = read_tsv('~/Google Drive/GenSoc/Data/Phenotypic Data/Compiled Data/abr6.tsv')
bd21 = read_tsv('~/Google Drive/GenSoc/Data/Phenotypic Data/Compiled Data/bd21.tsv')
# load qtl plotting functions
source('~/Google Drive/GenSoc/QTL Mapping/Code/qtlplotter.R')
# load QTL
qtl = read.cross(format="qtlcart",
file="~/Google Drive/GenSoc/Data/Genetic Map/Latest ABR6xBD21 Map/qtlcart.cro",
mapfile="~/Google Drive/GenSoc/Data/Genetic Map/Latest ABR6xBD21 Map/qtlcart.map")
qtl <- calc.genoprob(qtl, error.prob = 0.001)
kable((phendata[1:5,2:6]))%>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "float_left")
kable((phendata[1:5,7:11]))%>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "float_left")
kable((phendata[1:5,12:17]))%>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "float_left")
kable((phendata[1:5,17:19]))%>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "float_left")
rm(list=ls())
source('~/Google Drive/GenSoc/QTL Mapping/Code/marvinData.R')
View(Tbl)
source('~/Google Drive/GenSoc/QTL Mapping/Code/marvinData.R')
View(Tbl)
source('~/Google Drive/GenSoc/QTL Mapping/Code/marvinData.R')
View(Tbl)
source('~/Google Drive/GenSoc/QTL Mapping/Code/marvinData.R')
source('~/Google Drive/GenSoc/QTL Mapping/Code/marvinData.R')
source('~/Google Drive/GenSoc/QTL Mapping/Code/marvinData.R')
Tbl <- list.files(path = "Phenotypic Data/Marvin Data/F8 RILS/",
pattern = "BD_*.csv",
recursive = FALSE,
full.names = T) %>%
map_df(function(f) read_csv(f, col_types = cols(.default = "n")) %>% mutate('RIL-ID'=gsub("csv","",basename(f))))
source('~/Google Drive/GenSoc/QTL Mapping/Code/marvinData.R')
source('~/Google Drive/GenSoc/QTL Mapping/Code/marvinData.R')
source('~/Google Drive/GenSoc/QTL Mapping/Code/marvinData.R')
source('~/Google Drive/GenSoc/QTL Mapping/Code/marvinData.R')
source('~/Google Drive/GenSoc/QTL Mapping/Code/marvinData.R')
source('~/Google Drive/GenSoc/QTL Mapping/Code/marvinData.R')
source('~/Google Drive/GenSoc/QTL Mapping/Code/marvinData.R')
source('~/Google Drive/GenSoc/QTL Mapping/Code/marvinData.R')
source('~/Google Drive/GenSoc/QTL Mapping/Code/marvinData.R')
View(Tbl)
source('~/Google Drive/GenSoc/QTL Mapping/Code/marvinData.R')
list.files(path = "Phenotypic Data/Marvin Data/F8 RILS")
list.files(path = "Phenotypic Data/Marvin Data/F8 RILS", pattern="BD*")
list.files(path = "Phenotypic Data/Marvin Data/F8 RILS", pattern="BD*.csv")
list.files(path = "Phenotypic Data/Marvin Data/F8 RILS", pattern="BD*csv")
list.files(path = "Phenotypic Data/Marvin Data/F8 RILS", pattern="BD_")
source('~/Google Drive/GenSoc/QTL Mapping/Code/marvinData.R')
View(Tbl)
source('~/Google Drive/GenSoc/QTL Mapping/Code/marvinData.R')
View(Tbl)
Tbl <- Tbl[,3:6]
View(Tbl)
unique(Tbl$`RIL-ID`)
Tbl[- grep("-1", df$Name),]
Tbl[- grep("-1", Tbl$Name),]
Tbl[- grep("-1", Tbl$`RIL-ID`),]
